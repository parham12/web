{"version":3,"sources":["components/TronLinkGuide/index.js","utils/index.js","components/App/Home.js","components/App/Footer.js","components/App/Header.js","components/App/Plans.js","components/App/CardInvest.js","components/App/CardDeck.js","components/App/Stats.js","components/App/index.js","index.js","components/TronLinkGuide/TronLinkLogo.png"],"names":["TronLinkLogo","utils","tronWeb","contract","setTronWeb","_setTronWeb","Object","asyncToGenerator","regenerator_default","a","mark","_callee","wrap","_context","prev","next","this","at","sent","stop","_x","apply","arguments","Home","_ref","referralCode","onButtonWhitdraw","referralRewards","numberOfReferrers","react_default","createElement","className","id","data-wow-duration","data-wow-delay","style","marginTop","onClick","textAlign","href","src","alt","Footer","opacity","Component","Header","width","height","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","border","backgroundImage","data-scroll-nav","Plans","onButtonInvest1","onButtonInvest2","onButtonInvest3","onInputChange1","onInputChange2","onInputChange3","onChange","min","max","step","CardInvest","amount","plan","date","payout","withdrawable","date_","Date","year","getFullYear","month","getMonth","day","getDate","hours","getHours","minutes","getMinutes","formattedTime","getSeconds","concat","substr","formattedAmount","formattedPayout","formattedWithdrawable","formattedPlan","Card","flex","Body","paddingTop","paddingBottom","Text","CardDeck","cardsArray","investments","map","investment","i","App_CardInvest","key","investmentAmount","investmentPlan","investDate","investmentPayout","display","flexDirection","Stats","accAdr","accBalance","PLANS_rate","0","1","2","PLANS_day_limit","App","props","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","withdraw","value","state","input1","setState","currentInvestment","updateElementValue","input2","input3","event","target","_ref2","_callee2","_context2","_x2","_ref3","_callee3","_context3","_x3","reload","accountBalance","accountAddress","referrals","banksTotalInvestments","totalInvestmentsAmount","isRegistered","loading","currentAccount","numberOfInvestments","numberOfReferrals","referrerCode","referralRewardsPayout","installed","loggedIn","updateTotalDividents","bind","assertThisInitialized","Promise","resolve","tronWebState","window","ready","_this2","tries","timer","setInterval","TronWeb","clearInterval","defaultAddress","hex","address","toHex","base58","on","Utils","fetchData","toNumber","isCompleted","now","Math","floor","limitOfPlan","arr","totalDividents","formattedTotalDividents","totalDividentsPayout","_this3","length","console","log","calculateDivident","reduce","accumulator","currentValue","round","Number","EPSILON","document","getElementById","innerHTML","invest","queryString","location","search","urlp","URLSearchParams","get","totalInvestments","isAccount","getAccountDetails","account","getInvestmentDetails","push","transformInvestment","fetchAccountBalance","fetchAccountAddress","filter","temp","randomCodeGenerator","isCode","error","parseURL","insertInvestment","send","shouldPollResponse","callValue","then","res","Swal","title","catch","err","filteredArr","forEach","element","index","trx","getBalance","balanceInSun","balanceInTRX","fromSun","getAccount","accountAddressInBase58","fromHex","random","react","App_Header","App_Stats","App_Plans","App_Home","App_CardDeck","App_Footer","React","ReactDOM","render","components_App","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.269579bd.chunk.js","sourcesContent":["import React from 'react';\n\nimport TronLinkLogo from './TronLinkLogo.png';\nimport './TronLinkGuide.scss';\n\nconst WEBSTORE_URL = 'https://chrome.google.com/webstore/detail/ibnejdfjmmkpcnlpebklmnkoeoihofec/';\n\nconst logo = (\n    <div className='logo'>\n        <img src={ TronLinkLogo } alt='TronLink logo' />\n    </div>\n);\n\nconst openTronLink = () => {\n    window.open(WEBSTORE_URL, '_blank');\n};\n\nconst TronLinkGuide = props => {\n    const {\n        installed = false\n    } = props;\n\n    if(!installed) {\n        return (\n            <div className='tronLink' onClick={ openTronLink }>\n                <div className='info'>\n                    <h1>TronLink Required</h1>\n                    <p>\n                        To create a post or tip others you must install TronLink. TronLink is a TRON wallet for the browser\n                        that can be <a href={ WEBSTORE_URL } target='_blank' rel='noopener noreferrer'>installed from the Chrome Webstore</a>.\n                        Once installed, return back and refresh the page.\n                    </p>\n                </div>\n                { logo }\n            </div>\n        );\n    }\n\n    return (\n        <div className='tronLink hover' onClick={ openTronLink }>\n            <div className='info'>\n                <h1>Log in Required</h1>\n                <p>\n                    TronLink is installed but you must first log in. Open TronLink from the browser bar and set up your\n                    first wallet or decrypt a previously-created wallet.\n                </p>\n            </div>\n            { logo }\n        </div>\n    );\n};\n\nexport default TronLinkGuide;","const contractAddress = 'TKtP4nvoogsabGacp9dSsa9fyEpFaqbKiS'\n//asdsad\n\nconst utils = {\n    tronWeb: false,\n    contract: false,\n\n    async setTronWeb(tronWeb) {\n        this.tronWeb = tronWeb;\n        this.contract = await tronWeb.contract().at(contractAddress)\n    },\n};\n\nexport default utils;","import React, {Component} from 'react';\n\nconst Home = ({ referralCode, onButtonWhitdraw, referralRewards, numberOfReferrers }) => {\n  return(\n    <div>\n        <div>\n          {/*====== PRELOADER PART START ======*/}\n          <div className=\"preloader\">\n            <div className=\"loader\">\n              <div className=\"ytp-spinner\">\n                <div className=\"ytp-spinner-container\">\n                  <div className=\"ytp-spinner-rotator\">\n                    <div className=\"ytp-spinner-left\">\n                      <div className=\"ytp-spinner-circle\" />\n                    </div>\n                    <div className=\"ytp-spinner-right\">\n                      <div className=\"ytp-spinner-circle\" />\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n          {/*====== PRELOADER PART ENDS ======*/}\n\n          {/*====== ABOUT PART START ======*/}\n          <section id=\"about\" className=\"about-area pt-100\">\n            <div className=\"container\">\n              <div className=\"row\">\n                <div className=\"col-lg-6\">\n                  <div className=\"about-content mt-50 wow fadeInLeftBig\" data-wow-duration=\"1s\" data-wow-delay=\"0.5s\">\n                    <div className=\"section-title\">\n                      <div className=\"line\" />\n                      <h3 className=\"title\">Dividents</h3>\n                    </div> {/* section title */}\n                    <p className=\"text\">Total Investments <span id=\"total_investments\"> 0.00 </span> TRX</p>\n                    <p className=\"text\">Total Dividents <span id=\"total_dividents\"> 0.00 </span> TRX</p>\n                    <p className=\"text\">Whitdrawable <span id=\"total_whitdrawable\"> 0.00 </span> TRX</p>\n                    <button className=\"main-btn\" style={{marginTop:10}} onClick={onButtonWhitdraw}>Whitdraw</button>\n                  </div> {/* about content */}\n                </div>\n                <div className=\"col-lg-6 order-lg-last\" style={{textAlign:\"-webkit-right\"}}>\n                  <div className=\"about-content mt-50 wow fadeInLeftBig\" data-wow-duration=\"1s\" data-wow-delay=\"0.5s\">\n                    <div className=\"section-title\">\n                      <div className=\"line\" />\n                      <h3 className=\"title\">Referral program</h3>\n                      <p className=\"text wow fadeInUp\" data-wow-duration=\"1.3s\" data-wow-delay=\"0.8s\">How to earn money from referral: <br />3% for each one.</p>\n                    </div>\n                    <h6 className=\"text\">Referral Link </h6>\n                    <a href=\"\">{referralCode}</a>\n                    <h6 className=\"text\">Total Referral Rewards </h6><span>{referralRewards / 1000000}</span>\n                    <h6 className=\"text\">Number of Referrers </h6><span>{numberOfReferrers}</span>\n                  </div> \n                </div>\n                {/* <div className=\"col-lg-6\">\n                  <div className=\"about-image text-center mt-50 wow fadeInRightBig\" data-wow-duration=\"1s\" data-wow-delay=\"0.5s\">\n                    <img src=\"assets/images/about1.svg\" alt=\"about\" />\n                  </div>\n                </div> */}\n              </div> {/* row */}\n            </div> {/* container */}\n            <div className=\"about-shape-1\">\n              <img src=\"assets/images/about-shape-1.svg\" alt=\"shape\" />\n            </div>\n          </section>\n          {/*====== ABOUT PART ENDS ======*/}\n\n          {/*====== BRAMD PART START ======*/}\n          <div className=\"brand-area pt-90\">\n          <div className=\"container\">\n            <div className=\"row\">\n              <div className=\"col-lg-12\">\n                <div className=\"brand-\n                d-flex align-items-center justify-content-center justify-content-md-between\">\n                  <div className=\"single-logo mt-30 wow fadeIn\" data-wow-duration=\"1s\" data-wow-delay=\"0.2s\">\n                    <img src=\"assets/images/brand-1.png\" alt=\"brand\" />\n                  </div> {/* single logo */}\n                  <div className=\"single-logo mt-30 wow fadeIn\" data-wow-duration=\"1.5s\" data-wow-delay=\"0.2s\">\n                    <img src=\"assets/images/brand-2.png\" alt=\"brand\" />\n                  </div> {/* single logo */}\n                  <div className=\"single-logo mt-30 wow fadeIn\" data-wow-duration=\"1.5s\" data-wow-delay=\"0.3s\">\n                    <img src=\"assets/images/brand-3.png\" alt=\"brand\" />\n                  </div> {/* single logo */}\n                  <div className=\"single-logo mt-30 wow fadeIn\" data-wow-duration=\"1.5s\" data-wow-delay=\"0.4s\">\n                    <img src=\"assets/images/brand-4.png\" alt=\"brand\" />\n                  </div> {/* single logo */}\n                  <div className=\"single-logo mt-30 wow fadeIn\" data-wow-duration=\"1.5s\" data-wow-delay=\"0.5s\">\n                    <img src=\"assets/images/brand-5.png\" alt=\"brand\" />\n                  </div> {/* single logo */}\n                </div> {/* brand logo */}\n              </div>\n            </div>   {/* row */}\n          </div> {/* container */}\n        </div>\n        {/*====== BRAMD PART ENDS ======*/}\n\n        <a href=\"#\" className=\"back-to-top\"><i className=\"lni-chevron-up\" /></a>\n        {/*====== BACK TOP TOP PART ENDS ======*/}   \n</div>\n</div>\n)\n}\n\n\nexport default Home;","import React, { Component } from 'react';\n\nclass Footer extends Component {\n    render(){\n        return(\n            <div>\n                <footer id=\"footer\" className=\"footer-area pt-120\">\n    <div className=\"container\">\n      <div className=\"subscribe-form mt-50\" style={{opacity: 0}}>\n      </div> {/* subscribe area */}\n      <div className=\"footer-widget pb-100\">\n        <div className=\"row\">\n          <div className=\"col-lg-4 col-md-6 col-sm-8\">\n            <div className=\"footer-about mt-50 wow fadeIn\" data-wow-duration=\"1s\" data-wow-delay=\"0.2s\">\n              <a className=\"logo\" href=\"#\">\n                <img src=\"assets/images/logo-2.png\" alt=\"logo\" />\n              </a>\n              <ul className=\"social\">\n                <li><a href=\"https://t.me/mytronco\"><i className=\"lni-telegram\" /></a></li>\n                <li><a href=\"https://Twitter.com/mytron_co\"><i className=\"lni-twitter-filled\" /></a></li>\n                <li><a href=\"https://www.instagram.com/mytronco\"><i className=\"lni-instagram-filled\" /></a></li>\n                <li><a href=\"https://beta.companieshouse.gov.uk/company/08503428\"><i className=\"lni-money-location\" /></a></li>\n              </ul>\n            </div> {/* footer about */}\n          </div>\n          \n          <div className=\"col-lg-3 col-md-5 col-sm-5\">\n            <div className=\"footer-contact mt-50 wow fadeIn\" data-wow-duration=\"1s\" data-wow-delay=\"0.8s\">\n              <div className=\"footer-title\">\n                <h4 className=\"title\">Contact Us</h4>\n              </div>\n              <ul className=\"contact\">\n                <li>+16572215117</li>\n                <li>support@mytron.co</li>\n                <li>3 parkside Drive, London ,HA8 8JU</li>\n              </ul>\n            </div> {/* footer contact */}\n          </div>\n        </div> {/* row */}\n      </div> {/* footer widget */}\n      <div className=\"footer-copyright\">\n        <div className=\"row\">\n          <div className=\"col-lg-12\">\n            <div className=\"copyright d-sm-flex justify-content-between\">\n              {/* <div className=\"copyright-content\">\n                <p className=\"text\">Designed and Developed by <a href=\"https://tr.com\" rel=\"nofollow\">Tron Bank</a></p>\n              </div> */}\n            </div> {/* copyright */}\n          </div>\n        </div> {/* row */}\n      </div> {/* footer copyright */}\n    </div> {/* container */}\n    {/* <div id=\"particles-2\" /> */}\n  </footer>\n            </div>\n        )\n    }\n}\n\nexport default Footer;","import React from 'react';\n\nconst Header = () => {\n  return (\n    <header className=\"header-area\">\n\n      <div className=\"navbar-area\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-lg-12\">\n              <nav className=\"navbar navbar-expand-lg\">\n                <a className=\"navbar-brand\" href=\"index.html\">\n                  <img src=\"assets/images/logo.png\" width=\"70\" height=\"70\" alt=\"logo\" />\n                </a>\n                <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                  <span className=\"toggler-icon\" />\n                  <span className=\"toggler-icon\" />\n                  <span className=\"toggler-icon\" />\n                </button>\n                <div className=\"collapse navbar-collapse sub-menu-bar\" id=\"navbarSupportedContent\">\n                  <ul id=\"nav\" className=\"navbar-nav ml-auto\">\n                    <li className=\"nav-item active\">\n                      <a className=\"page-scroll\" href=\"#home\">Home</a>\n                    </li>\n                    <li className=\"nav-item\">\n                      <a className=\"page-scroll\" href=\"#about\">About</a>\n                    </li>\n                    <li className=\"nav-item\">\n                      <a className=\"page-scroll\" href=\"#footer\">Contact</a>\n                    </li>\n                    <li className=\"nav-item\">\n                      <a className=\"page-scroll\" href=\"#blog\">CONTRACT[TRONSCAN]</a>\n                    </li>\n                  </ul>\n                </div> {/* navbar collapse */}\n                <div className=\"navbar-btn d-none d-sm-inline-block\">\n                </div>\n                <ul className=\"social\">\n                <li><a href=\"https://t.me/mytronco\"><img id=\"telegram\" border=\"0\" alt=\"Telegram\" src=\"assets/images/telegram.svg\" width=\"30\" height=\"30\"/></a></li>\n                </ul>\n              </nav> \n            </div>\n          </div>\n        </div> \n      </div> \n\n\n\n    <div id=\"home\" className=\"header-hero bg_cover\" style={{backgroundImage: 'url(assets/images/banner-bg.svg)'}}>\n      <div className=\"container\">\n        <div className=\"row justify-content-center\">\n          <div className=\"col-lg-8\">\n            <div className=\"header-hero-content text-center\">\n              <h3 className=\"header-sub-title wow fadeInUp\" data-wow-duration=\"1.3s\" data-wow-delay=\"0.2s\" />\n              <h2 className=\"header-title wow fadeInUp\" data-wow-duration=\"1.3s\" data-wow-delay=\"0.5s\">Get 3.7% - 6.7% per day</h2>\n              <p className=\"text wow fadeInUp\" data-wow-duration=\"1.3s\" data-wow-delay=\"0.8s\">Decentralized &amp; Secure Smart Contract Fund.</p>\n              <div id=\"main-invest\">\n                <a className=\"main-btn main-invest wow fadeInUp page-scroll\" data-wow-duration=\"1.3s\" data-wow-delay=\"1.1s\" data-scroll-nav={0} href=\"#features\">Invest Now</a>\n              </div>\n            </div> {/* header hero content */}\n          </div>\n        </div> {/* row */}\n        <div className=\"row\">\n          <div className=\"col-lg-12\">\n            <div className=\"header-hero-image text-center wow fadeIn\" data-wow-duration=\"1.3s\" data-wow-delay=\"1.4s\">\n              <img src=\"assets/images/header-hero.png\" alt=\"hero\" />\n            </div> {/* header hero image */}\n          </div>\n        </div> {/* row */}\n      </div> {/* container */}\n    </div> {/* header hero */}\n  </header>\n  );\n}\n\n\nexport default Header;","import React, { Component } from 'react';\n\n\nconst Plans = ({ onButtonInvest1, onButtonInvest2, onButtonInvest3, onInputChange1, onInputChange2, onInputChange3 }) => {\n        return(\n            <section id=\"features\" className=\"services-area pt-120\">\n    <div className=\"container\">\n      <div className=\"row justify-content-center\">\n        <div className=\"col-lg-10\">\n          <div className=\"section-title text-center pb-40\">\n            <div className=\"line m-auto\" />\n            <h3 className=\"title\">Plans</h3>\n          </div> {/* section title */}\n        </div>\n      </div> {/* row */}\n      <div className=\"row justify-content-center\">\n        <div className=\"col-lg-4 col-md-7 col-sm-8\">\n          <div className=\"single-services text-center mt-30 wow fadeIn\" data-wow-duration=\"1s\" data-wow-delay=\"0.2s\">\n            <div className=\"services-icon\">\n              <img className=\"shape\" src=\"assets/images/services-shape.svg\" alt=\"shape\" />\n              <img className=\"shape-1\" src=\"assets/images/services-shape-1.svg\" alt=\"shape\" />\n              <i className=\"lni-baloon\" />\n            </div>\n            <div className=\"services-content mt-30\">\n              {/* <p className=\"text wow fadeInUp\" data-wow-duration=\"1.3s\" data-wow-delay=\"0.8s\">Diamond Plan</p> */}\n              <h4 className=\"services-title\">Plan 1</h4>\n              <div className=\"star\">\n                <ul >\n                  <li><i className=\"lni-star-filled\" /> Dividends every second</li>\n                  <li><i className=\"lni-star-filled\" /> 45 days</li>\n                  <li><i className=\"lni-star-filled\" /> Total return 211.5%</li>\n                  <li><i className=\"lni-star-filled\" /> Min. investment is 10 TRX</li>\n                </ul>\n              </div>\n              <input type=\"number\" id=\"input1\" onChange={onInputChange1} min=\"10\" max=\"10000000000\" step=\"0000000001\"/>\n              <br />\n              <button className=\"main-btn\" style={{marginTop:10}} onClick={onButtonInvest1}>Invest</button>\n            </div>\n          </div> {/* single services */}\n        </div>\n        <div className=\"col-lg-4 col-md-7 col-sm-8\">\n          <div className=\"single-services text-center mt-30 wow fadeIn\" data-wow-duration=\"1s\" data-wow-delay=\"0.5s\">\n            <div className=\"services-icon\">\n              <img className=\"shape\" src=\"assets/images/services-shape.svg\" alt=\"shape\" />\n              <img className=\"shape-1\" src=\"assets/images/services-shape-2.svg\" alt=\"shape\" />\n              <i className=\"lni-cog\" />\n            </div>\n            <div className=\"services-content mt-30\">\n              {/* <p className=\"text wow fadeInUp\" data-wow-duration=\"1.3s\" data-wow-delay=\"0.8s\">Diamond Plan</p> */}\n              <h4 className=\"services-title\">Plan 2</h4>\n              <div className=\"star\">\n                <ul >\n                  <li><i className=\"lni-star-filled\" /> Dividends every second</li>\n                  <li><i className=\"lni-star-filled\" /> 45 days</li>\n                  <li><i className=\"lni-star-filled\" /> Total return 211.5%</li>\n                  <li><i className=\"lni-star-filled\" /> Min. investment is 10 TRX</li>\n                </ul>\n              </div>\n\n              <input type=\"number\" id=\"input2\" onChange={onInputChange2} min=\"10\" max=\"10000000000\" step=\"0.0000000001\"/>\n              <br />\n              <button className=\"main-btn\" style={{marginTop:10}} onClick={onButtonInvest2}>Invest</button>\n            </div>\n          </div> {/* single services */}\n        </div>\n        <div className=\"col-lg-4 col-md-7 col-sm-8\">\n          <div className=\"single-services text-center mt-30 wow fadeIn\" data-wow-duration=\"1s\" data-wow-delay=\"0.8s\">\n            <div className=\"services-icon\">\n              <img className=\"shape\" src=\"assets/images/services-shape.svg\" alt=\"shape\" />\n              <img className=\"shape-1\" src=\"assets/images/services-shape-3.svg\" alt=\"shape\" />\n              <i className=\"lni-bolt-alt\" />\n            </div>\n            <div className=\"services-content mt-30\">\n              {/* <p className=\"text wow fadeInUp\" data-wow-duration=\"1.3s\" data-wow-delay=\"0.8s\">Diamond Plan</p> */}\n              <h4 className=\"services-title\">Plan 3</h4>\n              <div className=\"star\">\n                <ul >\n                  <li><i className=\"lni-star-filled\" /> Dividends every second</li>\n                  <li><i className=\"lni-star-filled\" /> 45 days</li>\n                  <li><i className=\"lni-star-filled\" /> Total return 211.5%</li>\n                  <li><i className=\"lni-star-filled\" /> Min. investment is 10 TRX</li>\n                </ul>\n              </div>\n              <input type=\"number\" id=\"input3\" onChange={onInputChange3} min=\"10\" max=\"10000000000\" step=\"0.0000000001\"/>\n              <br />\n              <button className=\"main-btn\" style={{marginTop:10}} onClick={onButtonInvest3}>Invest</button>\n            </div>\n          </div> {/* single services */}\n        </div>\n      </div> {/* row */}\n    </div> {/* container */}\n  </section>\n        )\n    }\n\n\nexport default Plans;","import React, { Fragment } from 'react';\nimport Card from 'react-bootstrap/Card';\n\nconst CardInvest = ({ id, amount, plan, date, payout, withdrawable }) => {\n  \n  let unix_timestamp = date;\n  let date_ = new Date(unix_timestamp * 1000);\n  let year = date_.getFullYear();\n  let month = date_.getMonth();\n  let day = date_.getDate();\n  let hours = date_.getHours();\n  let minutes = \"0\" + date_.getMinutes();\n  let seconds = \"0\" + date_.getSeconds();\n\n  let formattedTime = `${day}/${month}/${year} ${hours}:${minutes.substr(-2)}`;\n  let formattedAmount       = amount / 1000000;\n  let formattedPayout       = payout / 1000000;\n  let formattedWithdrawable = withdrawable / 1000000;\n  let formattedPlan = 0;\n  (plan == 1) ? (formattedPlan = 1) : ((plan == 2) ? (formattedPlan = 2) : (formattedPlan = 0));\n\n  return (\n        <Card style={{flex: id}}>\n              <Card.Body style={{paddingTop: 5, paddingBottom: 5}}>\n                {/* <Card.Title>Special title treatment</Card.Title> */}\n                <Card.Text>\n                  {formattedAmount} TRX | {formattedPlan} Daily ROI | {formattedTime} <br />Payout {formattedPayout} TRX | Whitdrawable {formattedWithdrawable} TRX\n                </Card.Text>\n              </Card.Body>\n        </Card>\n    );\n}\n\nexport default CardInvest;","import React from 'react';\nimport CardInvest from './CardInvest';\nimport Card from 'react-bootstrap/Card';\n\nconst CardDeck = ({ investments }) => {\n    const cardsArray = investments.map((investment, i) => {\n        return <CardInvest key={i} amount={investment.investmentAmount} plan={investment.investmentPlan} date={investment.investDate} payout={investment.investmentPayout} withdrawable={i}/>\n    });\n\n    return (\n        <section className=\"about-area pt-100\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-lg-6\">\n                <div className=\"about-image text-center mt-50 wow fadeInRightBig\" data-wow-duration=\"1s\" data-wow-delay=\"0.5s\">\n                    <img src=\"assets/images/about3.svg\" alt=\"about\" />\n                </div> {/* about image */}\n            </div>\n            <div className=\"col-lg-6\" style={{textAlign:\"-webkit-right\"}}>\n                <div className=\"about-content mt-50 wow fadeInLeftBig\" data-wow-duration=\"1s\" data-wow-delay=\"0.5s\">\n                <div className=\"section-title\">\n                    <div className=\"line\" />\n                    <h3 className=\"title\">My investments</h3>\n                </div>\n                {/* <p className=\"text\">Total Investments <span id=\"total_investments\"> 0.00 </span> TRX</p>\n                <p className=\"text\">Total Dividents <span id=\"total_dividents\"> 0.00 </span> TRX</p> */}\n                <div style={{display: 'flex', flexDirection: 'column', paddingTop: 15}}>\n                    { cardsArray }\n                </div>\n                </div>\n            </div>\n            \n          </div> {/* row */}\n        </div> {/* container */}\n      </section>\n        \n    );\n}\n\nexport default CardDeck;","import React from 'react';\n\nconst Stats = ( {accAdr, accBalance} ) => {\n    return(\n        <section id=\"stats\" className=\"about-area pt-100\">\n            <div className=\"container\">\n              <div className=\"row\">\n                <div className=\"col-lg-12\">\n                  <div className=\"about-content mt-50 wow fadeInLeftBig\" data-wow-duration=\"1s\" data-wow-delay=\"0.5s\">\n                    <div className=\"section-title\">\n                      <div className=\"line\" />\n                      <h3 className=\"title\">Total Investments</h3>\n                    </div>\n                    <p className=\"text\">Total Investments: <span id=\"total_bank_investments\"> 0.00 </span> TRX</p>\n                    <p className=\"text\">Your Wallet Address: <span> {accAdr} </span></p>\n                    <p className=\"text\">Your Wallet deposit: <span> {accBalance} </span> TRX</p>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </section>\n    )\n}\n\nexport default Stats;","import React, { Fragment } from 'react';\nimport TronLinkGuide from 'components/TronLinkGuide';\nimport TronWeb from 'tronweb';\nimport Utils from 'utils';\nimport Swal from 'sweetalert2';\nimport Home from './Home';\nimport Footer from './Footer';\nimport Header from './Header';\nimport Plans from './Plans';\nimport CardDeck from './CardDeck';\nimport Statistics from './Stats';\n\n// import { Textbox } from 'react-inputs-validation';\n// import 'react-inputs-validation/lib/react-inputs-validation.min.css';\nimport './App.scss';\nimport Stats from './Stats';\n\nconst FOUNDATION_ADDRESS = 'TWiWt5SEDzaEqS6kE5gandWMNfxR2B5xzg';\n\nconst PLANS_rate = {\n    0: 0.037,\n    1: 0.045,\n    2: 0.06\n}\n\nconst PLANS_day_limit = {\n    0: 0,\n    1: 30 * 84600,\n    2: 20 * 84600\n}\n\nclass App extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n              reload: false,\n              accountBalance: \"\",\n              accountAddress: \"\",\n              investments: [],\n              referrals: [],\n              banksTotalInvestments: 0,\n              totalInvestmentsAmount: 0,\n              isRegistered: false,\n              loading: false,\n              currentAccount: {\n                numberOfInvestments: 0,\n                numberOfReferrals: 0,\n                referralCode: '',\n                referrerCode: '',\n                referralRewards: '',\n                referralRewardsPayout: ''\n              },\n              currentInvestment: {\n                investmentPlan: 0,\n                investmentAmount: 0,\n              },\n              tronWeb: {\n                  installed: false,\n                  loggedIn: false\n              },\n              input1: '',\n              input2: '',\n              input3: ''\n            }\n\n            this.updateTotalDividents = this.updateTotalDividents.bind(this);\n            this.onButtonInvest1      = this.onButtonInvest1.bind(this);\n            this.onButtonInvest2      = this.onButtonInvest2.bind(this);\n            this.onButtonInvest3      = this.onButtonInvest3.bind(this);\n            \n    }\n\n    async componentDidMount() {\n\n        this.setState({loading:true})\n        await new Promise(resolve => {\n            const tronWebState = {\n                installed: !!window.tronWeb,\n                loggedIn: window.tronWeb && window.tronWeb.ready\n            };\n\n            if(tronWebState.installed) {\n                this.setState({\n                    tronWeb:\n                    tronWebState\n                });\n\n                return resolve();\n            }\n\n            let tries = 0;\n\n            const timer = setInterval(() => {\n                if(tries >= 10) {\n                    const TRONGRID_API = 'https://api.trongrid.io';\n\n                    window.tronWeb = new TronWeb(\n                        TRONGRID_API,\n                        TRONGRID_API,\n                        TRONGRID_API\n                    );\n\n                    this.setState({\n                        tronWeb: {\n                            installed: false,\n                            loggedIn: false\n                        }\n                    });\n\n                    clearInterval(timer);\n                    return resolve();\n                }\n\n                tronWebState.installed = !!window.tronWeb;\n                tronWebState.loggedIn = window.tronWeb && window.tronWeb.ready;\n\n                if(!tronWebState.installed)\n                    return tries++;\n\n                this.setState({\n                    tronWeb: tronWebState\n                });\n\n                resolve();\n            }, 100);\n        });\n\n        if(!this.state.tronWeb.loggedIn) {\n            // Set default address (foundation address) used for contract calls\n            // Directly overwrites the address object as TronLink disabled the\n            // function call\n            window.tronWeb.defaultAddress = {\n                hex: window.tronWeb.address.toHex(FOUNDATION_ADDRESS),\n                base58: FOUNDATION_ADDRESS\n            };\n\n            window.tronWeb.on('addressChanged', () => {\n                if(this.state.tronWeb.loggedIn)\n                    return;\n\n                this.setState({\n                    tronWeb: {\n                        installed: true,\n                        loggedIn: true\n                    }\n                });\n            });\n        }\n        \n        await Utils.setTronWeb(window.tronWeb);\n\n        // window.addEventListener('message', function (e) {\n        //     if (e.data.message && e.data.message.action == \"setAccount\") {\n        //         console.log(\"setAccount event\", e.data.message)\n        //         console.log(\"current address:\", e.data.message.data.address)\n        //         Utils.tronWeb.defaultAddress.base58 = e.data.message.data.address\n        //     }\n        // })\n        // var obj = setInterval(async ()=>{\n        //     if (window.tronWeb && window.tronWeb.defaultAddress.base58) {\n        //         clearInterval(obj)\n        //         let tronweb = window.tronWeb\n        //         console.log(tronweb, '-\\n', tronweb.ready);\n    \n        //     }\n        // }, 10)\n\n\n        this.fetchData();\n        // this.startEventListener();\n        this.setState({loading:false});\n    }\n      \n    // startEventListener(){\n    //     Utils.contract.eventVote().watch((err) => {\n\n    //         if(err){\n    //         return console.log('Failed to bind the event', err);\n    //         }\n\n    //         window.location.reload();\n    //     });\n\n    // }\n    refreshPage() {\n        this.setState(\n            {reload: true}\n        )\n    }\n\n    transformInvestment(investment){\n        return {\n            investmentPlan: investment.investmentPlan.toNumber(),\n            investmentAmount: investment.investmentAmount.toNumber(),\n            investmentPayout: investment.investmentPayout.toNumber(),\n            investDate: investment.investDate.toNumber(),\n            isCompleted: investment.isCompleted\n        }\n    }\n\n    calculateDivident(investment){\n        const now = Math.floor(Date.now() / 1000);\n        const limitOfPlan = PLANS_day_limit[investment.investmentPlan];\n        let duration;\n        if (!limitOfPlan) {duration = now - investment.investDate;}\n        else {duration = (now - investment.investDate > limitOfPlan) ? investment.investDate : now - investment.investDate;}\n        const divident = (duration * PLANS_rate[investment.investmentPlan] * investment.investmentAmount) / 86400000000;\n        return divident;\n    }\n\n    updateTotalDividents() {\n        let arr, totalDividents, formattedTotalDividents, totalDividentsPayout, withdrawable, formattedWithdrawable;\n        arr = this.state.investments;\n        if(!arr.length) return;\n        setInterval(() => {\n            console.log(\"TEST...\");\n            arr = this.state.investments;\n            totalDividents = arr.map(i => this.calculateDivident(i)).reduce((accumulator, currentValue) => accumulator + currentValue, 0);\n            formattedTotalDividents = Math.round((totalDividents + Number.EPSILON) * 10000) / 10000;\n            document.getElementById(\"total_dividents\").innerHTML   = formattedTotalDividents;\n            totalDividentsPayout = arr.reduce((accumulator, currentValue) => accumulator + currentValue.investmentPayout, 0);\n            withdrawable = totalDividents - totalDividentsPayout + this.state.currentAccount.referralRewards - this.state.currentAccount.referralRewardsPayout;\n            formattedWithdrawable = Math.round((withdrawable + Number.EPSILON) * 10000) / 10000;\n            document.getElementById(\"total_whitdrawable\").innerHTML   = formattedWithdrawable;\n          }, 5000);\n    }\n\n    async updateElementValue(value, id) {\n        document.getElementById('input1').value = '';\n        document.getElementById('input2').value = '';\n        document.getElementById('input3').value = '';\n        await this.setState({input1: ''});\n        await this.setState({input2: ''});\n        await this.setState({input3: ''});\n        this.invest(value, id);\n    }\n\n    parseURL(){\n        const queryString = window.location.search;\n        const urlp = new URLSearchParams(queryString);\n        const ref = (!urlp.get(\"ref\") ? 0 : urlp.get(\"ref\"));\n        return ref;\n    }\n\n    async fetchData(){\n        /*\n        const owner = (await Utils.contract.owner().call());\n        console.log('Owner address: ', owner);\n        console.log('Account address: ', Utils.tronWeb.defaultAddress.base58);\n        */\n        /*\n        const accountCount = (await Utils.contract.getAccountCount().call()).count.toNumber();\n        console.log('Number of accounts: ', accountCount);\n        */\n        let banksTotalInvestments = (await Utils.contract.totalInvestments().call());\n        let isRegistered = (await Utils.contract.isAccount(Utils.tronWeb.defaultAddress.base58).call());\n        // Get Investments\n        const account = (await Utils.contract.getAccountDetails().call());\n        const arr=[];\n        for(let i=0; i<account[0]; i++){\n            let investment = await Utils.contract.getInvestmentDetails(i).call();\n            arr.push(this.transformInvestment(investment));\n        }\n        // Create Total Investments' Amount\n        const totalInvestmentsAmount = arr.reduce((accumulator, currentValue) => accumulator + currentValue.investmentAmount, 0);\n        document.getElementById(\"total_investments\").innerHTML = totalInvestmentsAmount / 1000000;        \n        document.getElementById(\"total_bank_investments\").innerHTML = banksTotalInvestments / 1000000;\n        \n\n        this.setState({\n            banksTotalInvestments: banksTotalInvestments,\n            totalInvestmentsAmount: totalInvestmentsAmount,\n            isRegistered: isRegistered,\n            investments: arr,\n            currentAccount: {\n                numberOfInvestments:   account[0],\n                numberOfReferrals:     account[1],\n                referralCode:          account[2].toNumber(),\n                referrerCode:          account[3].toNumber(),\n                referralRewards:       account[4].toNumber(),\n                referralRewardsPayout: account[5].toNumber()\n            }\n        });\n        this.fetchAccountBalance();\n        this.fetchAccountAddress();\n        this.updateTotalDividents();\n        console.log(this.state.investments.filter(i => !i.isCompleted));\n        console.log(this.state.investments);\n        console.log(this.state.currentAccount);\n    }\n\n    async invest(investmentAmount, investmentPlan){    \n         \n        let referralCode = 0;\n        \n        if (!this.state.isRegistered){\n            let temp = this.randomCodeGenerator();\n            try {\n                while(!Utils.contract.isCode(referralCode).call()) temp = this.randomCodeGenerator();\n            }\n            catch (error) {\n                console.log(error);\n            }\n            referralCode = temp;\n        }\n        \n        const referrerCode     = this.parseURL(); // Must be read from URL.\n\n        try {\n            Utils.contract.insertInvestment(\n                referralCode,\n                referrerCode,\n                investmentPlan)\n                .send({\n                    shouldPollResponse: true,\n                    callValue: investmentAmount * 1000000\n                }).then(res => Swal({\n                    title:'Vote Casted',\n                    type: 'success'\n                })).catch(err => Swal({\n                    title:'Vote Failed',\n                    type: 'error'\n                }));\n            console.log(this.state.currentAccount);\n        } catch (error) {\n            console.log(\"Investment error...\\n\", error);\n        }\n        this.fetchData();\n        // this.updateElementValue(\"input1\" ,0);\n        // this.updateElementValue(\"input2\" ,0);\n        // this.updateElementValue(\"input3\" ,0);   \n    }\n    \n\n\n    async withdraw(){\n        const arr = this.state.investments;\n        const filteredArr = []; \n        arr.forEach((element, index) => {\n            if(!element.isCompleted) filteredArr.push(index);\n        });\n        console.log(filteredArr);\n        await Utils.contract.withdraw(Utils.tronWeb.defaultAddress.base58, filteredArr).send();\n    }\n\n    async fetchAccountBalance() {\n        const balanceInSun = await window.tronWeb.trx.getBalance(); //number\n        const balanceInTRX = window.tronWeb.fromSun(balanceInSun); //string\n    \n        this.setState({\n          accountBalance: balanceInTRX\n        });\n    }\n\n    async fetchAccountAddress() {\n        const account = await window.tronWeb.trx.getAccount();\n        const accountAddress = account.address; // HexString(Ascii)\n        const accountAddressInBase58 = window.tronWeb.address.fromHex(accountAddress); // Base58\n    \n        this.setState({\n          accountAddress: accountAddressInBase58\n        });\n    }\n\n    randomCodeGenerator(){\n        return Math.floor(Math.random() * 1000000);\n    }\n\n    onButtonWhitdraw = () => {        \n        this.withdraw();\n    }\n\n    // Sharte hadaqal investment tuye solidity ham emaal beshe !!!\n    onButtonInvest1 = () => {\n        const value = this.state.input1;\n        if (value < 10 || !value) return;\n        else {\n            this.setState({\n                currentInvestment: {\n                    investmentPlan: 0,\n                    investmentAmount: value\n                }\n            });\n            this.updateElementValue(value, 0);\n            // this.invest(value, 0);\n        }\n      }\n    \n      onButtonInvest2 = () => {\n        const value = this.state.input2;\n        if (value < 10 || !value) return;\n        else {\n            this.setState({\n                currentInvestment: {\n                    investmentPlan: 1,\n                    investmentAmount: value\n                }\n            });\n            this.updateElementValue(value, 1);\n            // this.invest(value, 1);\n        }\n      }\n      onButtonInvest3 = () => {\n        const value = this.state.input3;\n        if (value < 10 || !value) return;\n        else {\n            this.setState({\n                currentInvestment: {\n                    investmentPlan: 2,\n                    investmentAmount: value\n                }\n            });\n            this.updateElementValue(value, 2);\n            // this.invest(value, 3);\n        }\n      }\n   \n      onInputChange1 = async(event) => { \n        await this.setState({input1: event.target.value});\n      }\n      onInputChange2 = async(event) => {\n        await this.setState({input2: event.target.value});\n      }\n      onInputChange3 = async(event) => {\n        await this.setState({input3: event.target.value});\n      }\n\n    render() {\n        return (\n            \n            <Fragment>\n                <Header />\n                <Statistics \n                    accAdr={this.state.accountAddress}\n                    accBalance={this.state.accountBalance}\n                />\n                <Plans\n                    onButtonInvest1={this.onButtonInvest1}\n                    onButtonInvest2={this.onButtonInvest2}\n                    onButtonInvest3={this.onButtonInvest3}\n                    onInputChange1={this.onInputChange1}\n                    onInputChange2={this.onInputChange2}\n                    onInputChange3={this.onInputChange3}\n                />\n                <Home\n                    referralCode={this.state.currentAccount.referralCode}\n                    referralRewards={this.state.currentAccount.referralRewards}\n                    onButtonWhitdraw={this.onButtonWhitdraw}\n                    numberOfReferrers={this.state.currentAccount.numberOfReferrals}\n                />\n                <CardDeck investments={this.state.investments} />\n                <Footer />\n            </Fragment>\n            \n\n            //   <div className='row'>\n            //     <div className='col-lg-12 text-center' >\n            //       <h1>DAPP Election</h1>\n            //       <br/>\n            //       { this.state.loading\n            //         ? <p className='text-center'>Loading...</p>\n            //         : <Content\n            //             candidates={this.state.candidates}\n            //             hasVoted={this.state.hasVoted}\n            //             castVote={this.voteCandidate} />\n            //       }\n            //     </div>\n            //   </div>\n\n              \n        );\n    }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n","module.exports = __webpack_public_path__ + \"static/media/TronLinkLogo.d3a8f115.png\";"],"sourceRoot":""}